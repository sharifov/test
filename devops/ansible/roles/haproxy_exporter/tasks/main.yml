---
- name: Check if haproxy_exporter is installed
  stat:
    path: "{{ _haproxy_exporter_binary_install_dir }}/haproxy_exporter"
  register: __haproxy_exporter_is_installed
  check_mode: false

- name: Gather currently installed haproxy_exporter version (if any)
  command: "{{ _haproxy_exporter_binary_install_dir }}/haproxy_exporter --version"
  args:
    warn: false
  changed_when: false
  register: __haproxy_exporter_current_version_output
  check_mode: false
  when: __haproxy_exporter_is_installed.stat.exists

- block:
    - name: Create haproxy_exporter group
      group:
        name: "{{ _haproxy_exporter_system_group }}"
        state: present
        system: true
      when: _haproxy_exporter_system_group != "root"

    - name: Create haproxy_exporter user
      user:
        name: "{{ _haproxy_exporter_system_user }}"
        groups: "{{ _haproxy_exporter_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        create_home: false
        home: /
      when: _haproxy_exporter_system_user != "root"

    - name: Download haproxy_exporter binary
      become: false
      get_url:
        url: "https://github.com/prometheus/haproxy_exporter/releases/download/v{{ haproxy_exporter_version }}/haproxy_exporter-{{ haproxy_exporter_version }}.linux-amd64.tar.gz"
        dest: "/tmp/haproxy_exporter-{{ haproxy_exporter_version }}.linux-amd64.tar.gz"
      register: _download_binary
      until: _download_binary is succeeded
      retries: 5
      delay: 3
      check_mode: false

    - name: Unpack haproxy_exporter binary
      become: false
      unarchive:
        src: "/tmp/haproxy_exporter-{{ haproxy_exporter_version }}.linux-amd64.tar.gz"
        dest: "/tmp"
        creates: "/tmp/haproxy_exporter-{{ haproxy_exporter_version }}.linux-amd64/haproxy_exporter"
        remote_src: yes
      check_mode: false

    - name: Propagate haproxy_exporter binary
      copy:
        src: "/tmp/haproxy_exporter-{{ haproxy_exporter_version }}.linux-amd64/haproxy_exporter"
        dest: "{{ _haproxy_exporter_binary_install_dir }}/haproxy_exporter"
        mode: 0755
        owner: root
        group: root
        remote_src: yes
      notify: restart haproxy_exporter
  become: true
  when: (not __haproxy_exporter_is_installed.stat.exists) or (__haproxy_exporter_current_version_output.stderr_lines[0].split(" ")[2] != haproxy_exporter_version)


- name: Install selinux python packages on Centos
  become: true
  package:
    name:
      - "{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('libselinux-python','python3-libselinux') }}"
      - "{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('policycoreutils-python','python3-policycoreutils') }}"
    state: present
  register: _install_selinux_packages
  until: _install_selinux_packages is success
  retries: 5
  delay: 2
  when:
    - ansible_distribution | lower == "centos"
    - ansible_selinux.status == "enabled"

- name: Copy the haproxy_exporter systemd service file
  become: true
  template:
    src: haproxy_exporter.service.j2
    dest: /etc/systemd/system/haproxy_exporter.service
    owner: root
    group: root
    mode: 0644
  notify: restart haproxy_exporter

- name: Allow haproxy_exporter port in SELinux on Centos
  become: true
  seport:
    ports: "{{ haproxy_exporter_web_listen_address.split(':')[-1] }}"
    proto: tcp
    setype: http_port_t
    state: present
  when:
    - ansible_version.full is version_compare('2.4', '>=')
    - ansible_selinux.status == "enabled"

- name: Ensure Haproxy Exporter is enabled on boot
  become: true
  systemd:
    daemon_reload: true
    name: haproxy_exporter
    enabled: true
    state: started

# - name: flush handlers prior to running tests
#   meta: flush_handlers

# - name: Check haproxy-exporter metrics
#   uri:
#     url: http://localhost:9101/metrics
#     return_content: yes
#   register: metrics

# - name: fail when haproxy-exporter unable to collect metrics
#   fail:
#   when: "'haproxy_up 1' not in metrics.content"

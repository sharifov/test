<?php

namespace common\models;

use yii\db\ActiveQuery;

class ClientEmailQuery extends ActiveQuery
{
    /**
     * @param null $db
     * @return ClientEmail[]|array
     */
    public function all($db = null)
    {
        return parent::all($db); // TODO: Change the autogenerated stub
    }

    /**
     * @param null $db
     * @return ClientEmail|array|null
     */
    public function one($db = null)
    {
        return parent::one($db); // TODO: Change the autogenerated stub
    }

    public static function getWithSameClientsEmailsCount(int $clientId, int $limit = 10): array
    {
        $subQuery = Client::find()
            ->alias('client')
            ->select(['count(client.id)'])
            ->innerJoin(ClientEmail::tableName(), 'client.id = client_id and email = ce.email')
            ->where(['<>', 'client.id', $clientId]);

        $query = ClientEmail::find()
            ->alias('ce')
            ->select([
                'id',
                'email',
                'client_id',
                'type',
                'countUsersSameEmail' => $subQuery
            ])
            ->where(['client_id' => $clientId])
            ->groupBy([
                'id',
                'email',
                'client_id',
                'type'
            ])
            ->limit($limit);

        return $query->asArray()->all();
    }

    public static function getQueryClientEmailByClientId(int $clientId): ClientEmailQuery
    {
        return ClientEmail::find()
            ->andWhere(['client_id' => $clientId])
            ->andWhere([
                'OR',
                ['IS', 'type', null],
                ['<>', 'type', ClientEmail::EMAIL_INVALID],
            ]);
    }

    /**
     * @param string $email
     * @return $this
     */
    public function byEmail(string $email): self
    {
        return $this->andWhere(['email' => $email])->orderBy(['id' => SORT_DESC])->limit(1);
    }
}

global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        maxconn 60000
        daemon

        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

        ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

        ssl-dh-param-file /etc/haproxy/dhparams.pem

defaults
        log     global
        mode    http
        option  httplog
        log-format "%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r %HP"
        option  dontlognull
        timeout connect 5000
        timeout client  240s
        timeout server  240s
        timeout tunnel  3600s
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
        option  forwardfor

listen stats
        bind :2324
        mode http
        stats enable
        stats uri /haproxy
        stats hide-version
        stats auth {{ haproxy_stats_username }}:{{  haproxy_stats_password }}
        stats admin if TRUE

frontend http_in_80
        bind :80
        redirect scheme https code 301

frontend https_in_443
        bind *:443 ssl crt /etc/haproxy/ssl/ alpn h2,http/1.1
        maxconn 60000
        http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        http-request set-header X-Forwarded-Port 443
        http-request set-header X-Forwarded-Proto https
        http-request set-header X-Forwarded-For %[req.hdr(CF-Connecting-IP)]
        http-request set-header X-Country-Code %[req.hdr(CF-IPCountry)]
        use_backend crm_api_backend if { hdr(host) -i {{ api_domain }} }
        use_backend crm_api_backend if { hdr(host) -i {{ api_domain }}:443 }

        # FIREFOX workaround
        acl is_websocket hdr(Upgrade) -i WebSocket
        use_backend ws_backend if is_websocket

        acl is_ws_path path_beg -i /ws/
        use_backend ws_backend if { hdr(host) -i {{ app_domain }} } is_ws_path
        use_backend crm_backend if { hdr(host) -i {{ app_domain }} }

backend crm_backend
        stick-table type ip size 20k store http_req_cnt,http_req_rate(60s)
        http-request track-sc0 src
        cookie srvsession insert indirect nocache httponly secure
{% for backend in groups['crm'] %}
        server {{ hostvars[backend]['ansible_hostname'] }} {{ hostvars[backend]['ansible_default_ipv4']['address'] }}:8443 check ssl verify none cookie s{{ loop.index }} maxconn 5000
{% endfor %}

backend crm_api_backend
        stick-table type ip size 20k store http_req_cnt,http_req_rate(60s)
        http-request track-sc0 src
{% for backend in groups['crm'] %}
        server {{ hostvars[backend]['ansible_hostname'] }} {{ hostvars[backend]['ansible_default_ipv4']['address'] }}:8443 check ssl verify none maxconn 5000
{% endfor %}

backend ws_backend
        option http-server-close
        option httpclose
        option httpchk GET /ws/ "HTTP/1.1"
        http-check send hdr User-Agent HAProxy hdr Host {{ app_domain }}
        default-server inter 5s fall 3 rise 2
        stick-table type string len 20 size 50k expire 24h store http_req_cnt
        http-request track-sc0 urlp(user_id)
        stick on urlp(user_id) table ws_backend
        http-request set-header Host {{ app_domain }}
{% for backend in groups['crm'] %}
        server {{ hostvars[backend]['ansible_hostname'] }} {{ hostvars[backend]['ansible_default_ipv4']['address'] }}:8443 maxconn 5000 ssl verify none
{% endfor %}

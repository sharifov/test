<?php

namespace common\models\query;

use common\models\Client;
use common\models\ClientPhone;
use yii\db\ActiveQuery;

/**
 * Class ClientPhoneQuery
 */
class ClientPhoneQuery extends ActiveQuery
{
    public function notInvalid(): self
    {
        return $this->andWhere([
            'OR',
            ['is', 'type', null],
            ['<>', 'type', ClientPhone::PHONE_INVALID],
        ]);
    }

    /**
     * @param null $db
     * @return array|ClientPhone|null
     */
    public function one($db = null)
    {
        return parent::one($db); // TODO: Change the autogenerated stub
    }

    /**
     * @param null $db
     * @return array|ClientPhone[]
     */
    public function all($db = null)
    {
        return parent::all($db); // TODO: Change the autogenerated stub
    }

    public static function getWithSameClientsPhonesCount(int $clientId, int $limit = 10): array
    {
        $subQuery = Client::find()
            ->alias('client')
            ->select(['count(client.id)'])
            ->innerJoin(ClientPhone::tableName(), 'client.id = client_id and phone = cp.phone')
            ->where(['<>', 'client.id', $clientId]);

        $query = ClientPhone::find()
            ->alias('cp')
            ->select([
                'id',
                'phone',
                'client_id',
                'type',
                'countUsersSamePhone' => $subQuery
            ])
            ->where(['client_id' => $clientId])
            ->groupBy([
                'id',
                'phone',
                'client_id',
                'type'
            ])
            ->limit($limit);

        return $query->asArray()->all();
    }
}

version: '3.9'

services:
  redis:
    container_name: crm-redis
    image: redis:${REDIS_VERSION}
    ports:
      - ${REDIS_HOST_PORT}:6379
    restart: on-failure
    networks:
      - backend

  mysql:
    container_name: crm-mysql
    image: ${MYSQL_IMAGE}:${MYSQL_VERSION}
    ports:
      - ${MYSQL_HOST_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ${MYSQL_HOST_PATH_DB}:/var/lib/mysql
    security_opt:
      - seccomp:unconfined
    restart: on-failure
    networks:
      - backend

  psql:
    container_name: crm-psql
    image: postgres:${POSTGRES_VERSION}
    ports:
      - ${POSTGRES_HOST_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_HOST_PATH_DB}:/var/lib/postgresql/data
    restart: on-failure
    networks:
      - backend

  beanstalkd:
    container_name: crm-beanstalkd
    build:
      context: ./beanstalkd
      args:
        version: ${BEANSTALKD_VERSION}
    ports:
      - ${BEANSTALKD_HOST_PORT}:11300
    restart: on-failure
    networks:
      - backend

  centrifugo:
    container_name: crm-centrifugo
    image: centrifugo/centrifugo:${CENTRIFUGO_VERSION}
    volumes:
      - ./centrifugo/config.json:/centrifugo/config.json
      - ./centrifugo/logs:/var/log/centrifugo
    command: centrifugo -c config.json --health
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    restart: on-failure
    networks:
      - backend

  centrifugo-nginx:
    container_name: crm-centrifugo-nginx
    image: ${REGISTRY}crm-nginx:${NGINX_IMAGE_TAG}
    environment:
      - CENTRIFUGO_HOST=${CENTRIFUGO_HOST}
    ports:
      - ${CENTRIFUGO_HOST_PORT}:443
    volumes:
      - ./nginx/certs/:/etc/nginx/certs/:ro
      - ./centrifugo-nginx/templates:/etc/nginx/templates
      - ./centrifugo-nginx/logs:/var/log/nginx
    depends_on:
      - centrifugo
    restart: on-failure
    networks:
      - backend
      - kivork-proxy

  frontend-php-fpm:
    container_name: crm-frontend-php-fpm
    image: ${REGISTRY}crm-php-fpm:${PHP_FPM_IMAGE_TAG}
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG_FRONTEND}
    volumes:
      - ./../:/var/www/app
    working_dir: /var/www/app
    depends_on:
      - redis
      - mysql
      - psql
      - beanstalkd
      - centrifugo
      - queue
    restart: on-failure
    networks:
      - backend
      - kivork-proxy

  frontend-nginx:
    container_name: crm-frontend-nginx
    image: ${REGISTRY}crm-nginx:${NGINX_IMAGE_TAG}
    ports:
      - ${VIRTUAL_HOST_PORT}:443
    environment:
      - FILE_STORAGE_PATH=${FILE_STORAGE_PATH}
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - VOIP_RECORDS_PROXY_URL=${VOIP_RECORDS_PROXY_URL}
    volumes:
      - ./nginx/certs/:/etc/nginx/certs/:ro
      - ./frontend-nginx/templates:/etc/nginx/templates
      - ./frontend-nginx/logs:/var/log/nginx
      - ${FILE_STORAGE_PATH}:${FILE_STORAGE_PATH}
      - ./../:/var/www/app
    depends_on:
      - frontend-php-fpm
      - centrifugo-nginx
      - ws-nginx
    restart: on-failure
    networks:
      - backend
      - kivork-proxy

  api-php-fpm:
    container_name: crm-api-php-fpm
    image: ${REGISTRY}crm-php-fpm:${PHP_FPM_IMAGE_TAG}
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG_API}
    volumes:
      - ./../:/var/www/app
    working_dir: /var/www/app
    depends_on:
      - redis
      - mysql
      - psql
      - beanstalkd
      - centrifugo
      - queue
    restart: on-failure
    networks:
      - backend
      - kivork-proxy

  api-nginx:
    container_name: crm-api-nginx
    image: ${REGISTRY}crm-nginx:${NGINX_IMAGE_TAG}
    ports:
      - ${HOST_API_PORT}:80
    environment:
      - HOST_API=${HOST_API}
    volumes:
      - ./api-nginx/templates:/etc/nginx/templates
      - ./api-nginx/logs:/var/log/nginx
      - ./../:/var/www/app
    depends_on:
      - api-php-fpm
    restart: on-failure
    networks:
      backend:
      kivork-proxy:
        aliases:
          - ${HOST_API}

  ws-nginx:
    container_name: crm-ws-nginx
    image: ${REGISTRY}crm-nginx:${NGINX_IMAGE_TAG}
    ports:
      - ${WEB_SOCKET_SERVER_NGINX_PORT}:443
    environment:
      - WEB_SOCKET_SERVER_HOST=${WEB_SOCKET_SERVER_HOST}
      - WEB_SOCKET_SERVER_INTERNAL_PORT=${WEB_SOCKET_SERVER_INTERNAL_PORT}
    volumes:
      - ./nginx/certs/:/etc/nginx/certs/:ro
      - ./ws-nginx/templates:/etc/nginx/templates
      - ./ws-nginx/logs:/var/log/nginx
      - ./../:/var/www/app
    depends_on:
      - ws
    restart: on-failure
    networks:
      - backend
      - kivork-proxy

  ws:
    container_name: crm-ws
    build:
      context: ./swoole
      args:
        REGISTRY: ${REGISTRY}
        PHP_CLI_IMAGE_TAG: ${PHP_CLI_IMAGE_TAG}
    volumes:
      - ./../:/var/www/app
    working_dir: /var/www/app
    depends_on:
      - redis
      - mysql
      - psql
      - beanstalkd
      - centrifugo
      - queue
    restart: on-failure
    command: ./yii websocket-server-v3/start
    networks:
      - backend

  queue:
    container_name: crm-queue
    build:
      context: ./queue
      args:
        REGISTRY: ${REGISTRY}
        PHP_CLI_IMAGE_TAG: ${PHP_CLI_IMAGE_TAG}
    volumes:
      - ./../:/var/www/app
    working_dir: /var/www/app
    depends_on:
      - redis
      - mysql
      - psql
      - beanstalkd
      - centrifugo
    restart: on-failure
    networks:
      - backend
      - kivork-proxy

  console:
    container_name: crm-console
    build:
      context: ./console
      args:
        REGISTRY: ${REGISTRY}
        PHP_CLI_IMAGE_TAG: ${PHP_CLI_IMAGE_TAG}
        USER_NAME: ${USER_NAME}
        USER_ID: ${USER_ID}
        USER_GID: ${USER_GID}
        SSH_KEY: ${SSH_KEY}
        SSH_KEY_PUB: ${SSH_KEY_PUB}
    environment:
      SSH_AUTH_SOCK: /ssh-agent
    volumes:
      - ./../:/var/www/app
      - ./console/.composer/cache:/home/${USER_NAME}/.composer/cache
      - $SSH_AUTH_SOCK:/ssh-agent
    working_dir: /var/www/app
    depends_on:
      - redis
      - mysql
      - psql
      - beanstalkd
      - centrifugo
    networks:
      - backend
      - kivork-proxy

networks:
  backend:
  kivork-proxy:
    external: true
    name: kivork-proxy
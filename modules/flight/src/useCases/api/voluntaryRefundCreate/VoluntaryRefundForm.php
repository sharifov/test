<?php

namespace modules\flight\src\useCases\api\voluntaryRefundCreate;

use common\models\Currency;
use sales\forms\CompositeForm;
use sales\forms\CompositeRecursiveForm;

class VoluntaryRefundForm extends CompositeRecursiveForm
{
    public $currency;

    public function __construct(int $cntTickets = 0, $config = [])
    {
        $this->tickets = array_map(function () {
            return new TicketsForm();
        }, self::createCountMultiField($cntTickets));
        parent::__construct($config);
    }

    public function rules(): array
    {
        return [
            ['currency', 'required'],
            ['currency', 'string', 'max' => 3],
            ['currency', 'exist', 'targetClass' => Currency::class, 'targetAttribute' => 'cur_code']
        ];
    }

    public function validate($attributeNames = null, $clearErrors = true)
    {
        if (!isset($this->tickets) || empty($this->tickets)) {
            $this->addError('tickets', 'Tickets not provided');
            return false;
        }
        return parent::validate($attributeNames, $clearErrors); // TODO: Change the autogenerated stub
    }

    public function formName(): string
    {
        return 'refund';
    }

    /**
     * @inheritDoc
     */
    protected function internalForms(): array
    {
        return ['tickets'];
    }
}

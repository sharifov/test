<?php
namespace modules\order\src\forms;

use modules\order\src\entities\order\Order;
use modules\order\src\entities\orderUserProfit\OrderUserProfit;
use sales\forms\CompositeForm;
use yii\helpers\ArrayHelper;

class OrderUserProfitFormComposite extends CompositeForm
{
	/**
	 * OrderUserProfitFormComposite constructor.
	 * @param int $countOrderUserProfits
	 * @param array $config
	 */
	public function __construct(array $orderUserProfits, int $countOrderUserProfits, $config = [])
	{
		if ($countOrderUserProfits) {
			$cnt = $countOrderUserProfits;
		} else {
			$cnt = count($orderUserProfits) ?: 1;
		}
		$orderUserProfitsResult = [];
		for($i = 0; $i < $cnt; $i++) {
			if (isset($orderUserProfits[$i])) {
				$orderUserProfitsResult[] = $orderUserProfits[$i];
			} else {
				$orderUserProfitsResult[] = new OrderUserProfit();
			}
		}
		$this->orderUserProfits = $orderUserProfitsResult;
		parent::__construct($config);
	}

	/**
	 * @inheritDoc
	 */
	protected function internalForms(): array
	{
		return ['orderUserProfits'];
	}

	public function getAttributeValueByName(string $attribute)
	{
		return $this->$attribute ?? null;
	}

	public function validate($attributeNames = null, $clearErrors = true): bool
	{
		$orderUserProfits = $this->getAttributeValueByName('orderUserProfits');
		$sum = array_column($orderUserProfits, 'oup_percent');

		if (array_sum($sum) > OrderUserProfit::MAX_PERCENT) {
			$this->addError('orderUserProfits.0.oup_user_id', 'Total sum of percent on this order cant be more then 100%');
			return false;
		}

		return parent::validate($attributeNames, $clearErrors); // TODO: Change the autogenerated stub
	}

}